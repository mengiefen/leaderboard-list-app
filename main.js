/*! For license information please see main.js.LICENSE.txt */
(()=>{var n={740:(n,e,t)=>{"use strict";t.d(e,{Z:()=>l});var r=t(537),i=t.n(r),o=t(645),a=t.n(o),s=t(667),c=t.n(s),A=new URL(t(820),t.b),u=a()(i());u.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700;800;900&family=Tourney:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,400&display=swap);"]);var d=c()(A);u.push([n.id,"root {\n  --purple: #7e077e;\n  --deep-purple: rgb(121, 20, 99);\n  --bright-cyan: hsl(192, 70%, 51%);\n  --light-grayish-blue: hsl(220, 16%, 96%);\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n  font-family: Orbitron, serif;\n  font-size: 10px;\n  color: rgb(151, 20, 123);\n  font-weight: 500;\n}\n\nbody {\n  background: linear-gradient(to right, #93fcf6, #cc4cd1);\n  background-image: url("+d+");\n  background-size: cover;\n  background-repeat: no-repeat;\n  margin: auto;\n  position: relative;\n}\n\n#canvas {\n  z-index: -1;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  cursor: crosshair;\n  display: block;\n}\n\n.submit-error {\n  display: none;\n}\n\n.error {\n  display: block;\n  color: rgb(168, 11, 6);\n  font-weight: 800;\n  font-size: 1.6em;\n  padding: 2rem 0 1rem 0;\n}\n\n.congratulations {\n  display: block;\n  color: darkblue;\n  font-size: 1.6rem;\n  text-shadow: 0 0 10px #0fd;\n}\n\nmain {\n  z-index: 999;\n  margin: 0 5%;\n  padding: 2rem;\n  border-radius: 5px;\n  height: 100vh;\n  background-color: #ffffff10;\n  backdrop-filter: blur(3px);\n  -webkit-backdrop-filter: blur(3px);\n  box-shadow: rgba(250, 250, 250, 0.7) 0 0.7rem 2.9rem 0;\n}\n\n.page-header {\n  text-align: start;\n  font-family: Tourney, sans-serif;\n  text-transform: uppercase;\n  font-size: 5rem;\n  padding-left: 5%;\n  letter-spacing: 1.2rem;\n  color: var(--purple);\n}\n\n.sub-title {\n  font-family: Tourney, sans-serif;\n  font-size: 2.8rem;\n  font-weight: 600;\n  padding-right: 3rem;\n  color: var(--purple);\n}\n\n.container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.score-list {\n  margin-top: 4rem;\n  width: 60%;\n  max-height: 82vh;\n  margin-right: 5rem;\n  padding: 1rem;\n  -webkit-box-shadow: 1px 1px 10px 1px #777;\n  box-shadow: 1px 1px 10px 1px #777;\n  border-radius: 5px;\n  overflow-y: scroll;\n  scrollbar-color: #1f4b53 transparent;\n}\n\n::-webkit-scrollbar {\n  height: 1.2rem;\n  width: 0.6rem;\n  background: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #1f4b53;\n}\n\n::-webkit-scrollbar-corner {\n  background: transparent;\n}\n\n.title-box {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.score-list-box {\n  border-radius: 5px;\n  -webkit-box-shadow: -1px 4px 36px 0 rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: -1px 4px 36px 0 rgba(34, 60, 80, 0.2);\n  box-shadow: -1px 4px 36px 0 rgba(34, 60, 80, 0.2);\n  padding: 1rem;\n  margin: 3rem 1rem 1rem 1rem;\n}\n\n.score-list-row {\n  background-color: rgba(43, 183, 218, 0.4);\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 4rem;\n  height: auto;\n  margin-bottom: 0.3rem;\n  box-shadow:\n    rgba(38, 38, 112, 0.25) 0 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0 30px 60px -30px;\n  border-radius: 1px;\n}\n\n.wrapper-serial-image {\n  width: 20%;\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.wrapper-name-score {\n  width: 80%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.score-list-name,\n.score-list-score {\n  font-size: 1.6rem;\n  padding: 1.2rem 0;\n}\n\n.score-list-score {\n  font-weight: bold;\n  justify-self: end;\n  padding-right: 2rem;\n}\n\n.serial-number {\n  width: 20px;\n  font-size: 2.2rem;\n  padding: 0 2rem;\n}\n\n.medal {\n  width: 20px;\n  height: auto;\n  align-self: center;\n  justify-self: flex-start;\n}\n\n.btn {\n  border: none;\n  outline: none;\n  padding: 1.2rem 1.5rem;\n  border-radius: 3rem;\n  color: #eee;\n  background-image:\n    linear-gradient(\n      to right,\n      rgb(121, 20, 99) 0%,\n      hsl(192, 70%, 51%) 100%\n    );\n  cursor: pointer;\n}\n\n.btn-refresh {\n  align-self: flex-end;\n  font-family: Lato, sans-serif;\n  font-size: 1.6rem;\n  font-weight: 600;\n  min-width: 12rem;\n  padding: 0.8rem 1.2rem;\n  transition: transform 1s;\n}\n\n.btn-refresh i {\n  font-size: 1.8rem;\n  transition: transform 1s;\n}\n\n.btn-refresh:active i {\n  -moz-transform: rotate(360deg);\n  transform: rotate(360deg);\n}\n\n.wrapper-score-submit {\n  margin-top: 4rem;\n  padding: 1rem;\n  border-radius: 5px;\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n}\n\n.form-title {\n  font-family: Tourney, sans-serif;\n  font-size: 2.8rem;\n  font-weight: 600;\n  padding-bottom: 2rem;\n  color: rgb(4, 34, 27);\n}\n\n.score-submit-form {\n  display: flex;\n  flex-direction: column;\n  justify-content: end;\n}\n\n.wrapper-input {\n  padding: 1rem 0;\n}\n\ninput {\n  background-color: #63659f;\n  color: #eee;\n  font-size: 1.8rem;\n  width: 100%;\n  padding: 1.4rem 1rem;\n  margin: 0.3rem 0;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  font-style: italic;\n}\n\ninput::placeholder {\n  color: #ccc;\n}\n\ninput[type='number'] {\n  -moz-appearance: textfield;\n  appearance: textfield;\n  margin: 0;\n}\n\ninput[type='number']::-webkit-inner-spin-button,\ninput[type='number']::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.fetch-error {\n  display: none;\n  color: rgb(168, 11, 6);\n  font-weight: 800;\n  font-size: 1.9em;\n  padding: 1rem 0;\n}\n\n.btn-score-submit {\n  align-self: flex-end;\n  position: relative;\n  display: inline-block;\n  padding: 1.6rem 4rem;\n  border: 3px solid transparent;\n  margin: 2rem 0;\n  color: #6aebd5;\n  background-color: rgb(121, 20, 99);\n  text-transform: uppercase;\n  transition: 0.5s;\n  letter-spacing: 4px;\n  overflow: hidden;\n}\n\n.btn-score-submit:hover {\n  border: 3px solid rgb(121, 20, 99);\n  background: #03e9f4;\n  color: #050801;\n  box-shadow:\n    0 0 5px #03e9f4,\n    0 0 25px #03e9f4,\n    0 0 50px #03e9f4,\n    0 0 200px #03e9f4;\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\n}\n\n.btn-score-submit:nth-child(1) {\n  filter: hue-rotate(270deg);\n}\n\n.btn-score-submit:nth-child(2) {\n  filter: hue-rotate(110deg);\n}\n\n.btn-score-submit span {\n  position: absolute;\n}\n\n.btn-score-submit span:nth-child(1) {\n  left: 0;\n  top: 0;\n  width: 0;\n  height: 10px;\n  background: linear-gradient(90deg, transparent, #03e9f4);\n}\n\n.btn-score-submit span:nth-child(2) {\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 0;\n  background: linear-gradient(180deg, transparent, #03e9f4);\n}\n\n.btn-score-submit span:nth-child(3) {\n  right: 0;\n  bottom: 0;\n  height: 10px;\n  width: 0;\n  background: linear-gradient(270deg, transparent, #03e9f4);\n}\n\n.btn-score-submit span:nth-child(4) {\n  bottom: 0;\n  left: 0;\n  height: 0;\n  width: 10px;\n  background: linear-gradient(360deg, transparent, #03e9f4);\n}\n\n@media screen and (max-width: 768px) {\n  .page-header {\n    font-size: 3rem;\n    letter-spacing: 0.5rem;\n  }\n\n  .sub-title {\n    padding-right: 1rem;\n    font-size: 2rem;\n    font-weight: 800;\n  }\n\n  .main {\n    margin: 0;\n    padding: 0;\n  }\n\n  .container {\n    flex-direction: column;\n  }\n\n  .score-list {\n    margin-top: 1rem;\n    order: 2;\n    max-height: 50vh;\n    width: 100%;\n    margin-right: 0;\n    padding: 0.5rem;\n  }\n\n  .score-list-box {\n    padding: 0.5rem;\n    margin: 0;\n    margin: 1rem 0;\n  }\n\n  .score-list-name,\n  .score-list-score {\n    font-size: 1.3rem;\n    align-self: center;\n  }\n\n  .score-list-score {\n    text-overflow: clip;\n  }\n\n  .medal {\n    width: 20px;\n  }\n\n  .wrapper-score-submit {\n    margin-top: 2rem;\n    width: 100%;\n    max-height: 30%;\n  }\n\n  .form-title {\n    font-size: 2rem;\n    font-weight: 800;\n  }\n\n  .wrapper-input {\n    padding: 0;\n  }\n\n  input {\n    padding: 1rem;\n  }\n\n  .btn-score-submit {\n    margin: 2rem 0 1rem 0;\n    padding: 1.2rem 4rem;\n    border: 2px solid transparent;\n  }\n\n  .btn-score-submit:hover,\n  .btn-score-submit:active {\n    background: rgb(121, 20, 99);\n    color: #03e9f4;\n    border: 2px solid #03e9f4;\n  }\n\n  .btn-score-submit span:nth-child(1) {\n    height: 4px;\n  }\n\n  .btn-score-submit span:nth-child(2) {\n    width: 4px;\n  }\n\n  .btn-score-submit span:nth-child(3) {\n    height: 4px;\n  }\n\n  .btn-score-submit span:nth-child(4) {\n    width: 4px;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  main {\n    margin: 0 1rem;\n  }\n}\n\n@media screen and (max-width: 560px) {\n  .score-list-row {\n    justify-content: space-between;\n  }\n\n  .wrapper-name-score {\n    width: 60%;\n    flex-direction: column;\n  }\n\n  .score-list-score {\n    justify-self: center;\n    padding-right: 0;\n    padding-bottom: 1rem;\n  }\n\n  .score-list-name {\n    justify-self: center;\n    padding: 1rem 0 0 0;\n  }\n}\n","",{version:3,sources:["webpack://./src/css/styles.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700;800;900&family=Tourney:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,400&display=swap');\n\nroot {\n  --purple: #7e077e;\n  --deep-purple: rgb(121, 20, 99);\n  --bright-cyan: hsl(192, 70%, 51%);\n  --light-grayish-blue: hsl(220, 16%, 96%);\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n  font-family: Orbitron, serif;\n  font-size: 10px;\n  color: rgb(151, 20, 123);\n  font-weight: 500;\n}\n\nbody {\n  background: linear-gradient(to right, #93fcf6, #cc4cd1);\n  background-image: url('../images/bg.jpg');\n  background-size: cover;\n  background-repeat: no-repeat;\n  margin: auto;\n  position: relative;\n}\n\n#canvas {\n  z-index: -1;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  cursor: crosshair;\n  display: block;\n}\n\n.submit-error {\n  display: none;\n}\n\n.error {\n  display: block;\n  color: rgb(168, 11, 6);\n  font-weight: 800;\n  font-size: 1.6em;\n  padding: 2rem 0 1rem 0;\n}\n\n.congratulations {\n  display: block;\n  color: darkblue;\n  font-size: 1.6rem;\n  text-shadow: 0 0 10px #0fd;\n}\n\nmain {\n  z-index: 999;\n  margin: 0 5%;\n  padding: 2rem;\n  border-radius: 5px;\n  height: 100vh;\n  background-color: #ffffff10;\n  backdrop-filter: blur(3px);\n  -webkit-backdrop-filter: blur(3px);\n  box-shadow: rgba(250, 250, 250, 0.7) 0 0.7rem 2.9rem 0;\n}\n\n.page-header {\n  text-align: start;\n  font-family: Tourney, sans-serif;\n  text-transform: uppercase;\n  font-size: 5rem;\n  padding-left: 5%;\n  letter-spacing: 1.2rem;\n  color: var(--purple);\n}\n\n.sub-title {\n  font-family: Tourney, sans-serif;\n  font-size: 2.8rem;\n  font-weight: 600;\n  padding-right: 3rem;\n  color: var(--purple);\n}\n\n.container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.score-list {\n  margin-top: 4rem;\n  width: 60%;\n  max-height: 82vh;\n  margin-right: 5rem;\n  padding: 1rem;\n  -webkit-box-shadow: 1px 1px 10px 1px #777;\n  box-shadow: 1px 1px 10px 1px #777;\n  border-radius: 5px;\n  overflow-y: scroll;\n  scrollbar-color: #1f4b53 transparent;\n}\n\n::-webkit-scrollbar {\n  height: 1.2rem;\n  width: 0.6rem;\n  background: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #1f4b53;\n}\n\n::-webkit-scrollbar-corner {\n  background: transparent;\n}\n\n.title-box {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.score-list-box {\n  border-radius: 5px;\n  -webkit-box-shadow: -1px 4px 36px 0 rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: -1px 4px 36px 0 rgba(34, 60, 80, 0.2);\n  box-shadow: -1px 4px 36px 0 rgba(34, 60, 80, 0.2);\n  padding: 1rem;\n  margin: 3rem 1rem 1rem 1rem;\n}\n\n.score-list-row {\n  background-color: rgba(43, 183, 218, 0.4);\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 4rem;\n  height: auto;\n  margin-bottom: 0.3rem;\n  box-shadow:\n    rgba(38, 38, 112, 0.25) 0 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0 30px 60px -30px;\n  border-radius: 1px;\n}\n\n.wrapper-serial-image {\n  width: 20%;\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.wrapper-name-score {\n  width: 80%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.score-list-name,\n.score-list-score {\n  font-size: 1.6rem;\n  padding: 1.2rem 0;\n}\n\n.score-list-score {\n  font-weight: bold;\n  justify-self: end;\n  padding-right: 2rem;\n}\n\n.serial-number {\n  width: 20px;\n  font-size: 2.2rem;\n  padding: 0 2rem;\n}\n\n.medal {\n  width: 20px;\n  height: auto;\n  align-self: center;\n  justify-self: flex-start;\n}\n\n.btn {\n  border: none;\n  outline: none;\n  padding: 1.2rem 1.5rem;\n  border-radius: 3rem;\n  color: #eee;\n  background-image:\n    linear-gradient(\n      to right,\n      rgb(121, 20, 99) 0%,\n      hsl(192, 70%, 51%) 100%\n    );\n  cursor: pointer;\n}\n\n.btn-refresh {\n  align-self: flex-end;\n  font-family: Lato, sans-serif;\n  font-size: 1.6rem;\n  font-weight: 600;\n  min-width: 12rem;\n  padding: 0.8rem 1.2rem;\n  transition: transform 1s;\n}\n\n.btn-refresh i {\n  font-size: 1.8rem;\n  transition: transform 1s;\n}\n\n.btn-refresh:active i {\n  -moz-transform: rotate(360deg);\n  transform: rotate(360deg);\n}\n\n.wrapper-score-submit {\n  margin-top: 4rem;\n  padding: 1rem;\n  border-radius: 5px;\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n}\n\n.form-title {\n  font-family: Tourney, sans-serif;\n  font-size: 2.8rem;\n  font-weight: 600;\n  padding-bottom: 2rem;\n  color: rgb(4, 34, 27);\n}\n\n.score-submit-form {\n  display: flex;\n  flex-direction: column;\n  justify-content: end;\n}\n\n.wrapper-input {\n  padding: 1rem 0;\n}\n\ninput {\n  background-color: #63659f;\n  color: #eee;\n  font-size: 1.8rem;\n  width: 100%;\n  padding: 1.4rem 1rem;\n  margin: 0.3rem 0;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  font-style: italic;\n}\n\ninput::placeholder {\n  color: #ccc;\n}\n\ninput[type='number'] {\n  -moz-appearance: textfield;\n  appearance: textfield;\n  margin: 0;\n}\n\ninput[type='number']::-webkit-inner-spin-button,\ninput[type='number']::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n.fetch-error {\n  display: none;\n  color: rgb(168, 11, 6);\n  font-weight: 800;\n  font-size: 1.9em;\n  padding: 1rem 0;\n}\n\n.btn-score-submit {\n  align-self: flex-end;\n  position: relative;\n  display: inline-block;\n  padding: 1.6rem 4rem;\n  border: 3px solid transparent;\n  margin: 2rem 0;\n  color: #6aebd5;\n  background-color: rgb(121, 20, 99);\n  text-transform: uppercase;\n  transition: 0.5s;\n  letter-spacing: 4px;\n  overflow: hidden;\n}\n\n.btn-score-submit:hover {\n  border: 3px solid rgb(121, 20, 99);\n  background: #03e9f4;\n  color: #050801;\n  box-shadow:\n    0 0 5px #03e9f4,\n    0 0 25px #03e9f4,\n    0 0 50px #03e9f4,\n    0 0 200px #03e9f4;\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\n}\n\n.btn-score-submit:nth-child(1) {\n  filter: hue-rotate(270deg);\n}\n\n.btn-score-submit:nth-child(2) {\n  filter: hue-rotate(110deg);\n}\n\n.btn-score-submit span {\n  position: absolute;\n}\n\n.btn-score-submit span:nth-child(1) {\n  left: 0;\n  top: 0;\n  width: 0;\n  height: 10px;\n  background: linear-gradient(90deg, transparent, #03e9f4);\n}\n\n.btn-score-submit span:nth-child(2) {\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 0;\n  background: linear-gradient(180deg, transparent, #03e9f4);\n}\n\n.btn-score-submit span:nth-child(3) {\n  right: 0;\n  bottom: 0;\n  height: 10px;\n  width: 0;\n  background: linear-gradient(270deg, transparent, #03e9f4);\n}\n\n.btn-score-submit span:nth-child(4) {\n  bottom: 0;\n  left: 0;\n  height: 0;\n  width: 10px;\n  background: linear-gradient(360deg, transparent, #03e9f4);\n}\n\n@media screen and (max-width: 768px) {\n  .page-header {\n    font-size: 3rem;\n    letter-spacing: 0.5rem;\n  }\n\n  .sub-title {\n    padding-right: 1rem;\n    font-size: 2rem;\n    font-weight: 800;\n  }\n\n  .main {\n    margin: 0;\n    padding: 0;\n  }\n\n  .container {\n    flex-direction: column;\n  }\n\n  .score-list {\n    margin-top: 1rem;\n    order: 2;\n    max-height: 50vh;\n    width: 100%;\n    margin-right: 0;\n    padding: 0.5rem;\n  }\n\n  .score-list-box {\n    padding: 0.5rem;\n    margin: 0;\n    margin: 1rem 0;\n  }\n\n  .score-list-name,\n  .score-list-score {\n    font-size: 1.3rem;\n    align-self: center;\n  }\n\n  .score-list-score {\n    text-overflow: clip;\n  }\n\n  .medal {\n    width: 20px;\n  }\n\n  .wrapper-score-submit {\n    margin-top: 2rem;\n    width: 100%;\n    max-height: 30%;\n  }\n\n  .form-title {\n    font-size: 2rem;\n    font-weight: 800;\n  }\n\n  .wrapper-input {\n    padding: 0;\n  }\n\n  input {\n    padding: 1rem;\n  }\n\n  .btn-score-submit {\n    margin: 2rem 0 1rem 0;\n    padding: 1.2rem 4rem;\n    border: 2px solid transparent;\n  }\n\n  .btn-score-submit:hover,\n  .btn-score-submit:active {\n    background: rgb(121, 20, 99);\n    color: #03e9f4;\n    border: 2px solid #03e9f4;\n  }\n\n  .btn-score-submit span:nth-child(1) {\n    height: 4px;\n  }\n\n  .btn-score-submit span:nth-child(2) {\n    width: 4px;\n  }\n\n  .btn-score-submit span:nth-child(3) {\n    height: 4px;\n  }\n\n  .btn-score-submit span:nth-child(4) {\n    width: 4px;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  main {\n    margin: 0 1rem;\n  }\n}\n\n@media screen and (max-width: 560px) {\n  .score-list-row {\n    justify-content: space-between;\n  }\n\n  .wrapper-name-score {\n    width: 60%;\n    flex-direction: column;\n  }\n\n  .score-list-score {\n    justify-self: center;\n    padding-right: 0;\n    padding-bottom: 1rem;\n  }\n\n  .score-list-name {\n    justify-self: center;\n    padding: 1rem 0 0 0;\n  }\n}\n"],sourceRoot:""}]);const l=u},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var u=[].concat(n[A]);r&&a[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),e.push(u))}},e}},667:n=>{"use strict";n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([o]).join("\n")}return[e].join("\n")}},611:function(n){n.exports=(()=>{"use strict";var n={511:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Explosion=void 0;var r=t(909);e.Explosion=class{constructor(n){var{x:e,y:t,ctx:i,hue:o,exp:a,gravity:s,friction:c,brightness:A,explosionLength:u}=n;for(this._coordinates=[],this._alpha=1,this._x=e,this._y=t,this._exp=a,this._ctx=i,this._gravity=s,this._friction=c,this._explosionLength=u;this._explosionLength--;)this._coordinates.push([e,t]);this._angle=(0,r.randomFloat)(0,2*Math.PI),this._speed=(0,r.randomInt)(1,10),this._hue=(0,r.randomInt)(o-20,o+20),this._brightness=(0,r.randomInt)(A.min,A.max),this._decay=(0,r.randomFloat)(A.decay.min,A.decay.max)}update(n){this._coordinates.pop(),this._coordinates.unshift([this._x,this._y]),this._speed*=this._friction,this._x+=Math.cos(this._angle)*this._speed,this._y+=Math.sin(this._angle)*this._speed+this._gravity,this._alpha-=this._decay,this._alpha<=this._decay&&n()}draw(){var n=this._coordinates.length-1;this._ctx.beginPath(),this._exp&&(this._ctx.arc(this._x,this._y,(0,r.randomFloat)(.5,1.5),0,2*Math.PI),this._ctx.fill()),this._ctx.fillStyle=(0,r.hsla)(this._hue,this._brightness,this._alpha),this._ctx.moveTo(this._coordinates[n][0],this._coordinates[n][1]),this._ctx.lineTo(this._x,this._y),this._ctx.strokeStyle=(0,r.hsla)(this._hue,this._brightness,this._alpha),this._ctx.stroke()}}},909:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.hsla=e.getDistance=e.randomInt=e.randomFloat=void 0,e.randomFloat=function(n,e){return Math.random()*(e-n)+n},e.randomInt=function(n,e){return Math.floor(n+Math.random()*(e+1-n))},e.getDistance=function(n,e,t,r){var i=Math.pow;return Math.sqrt(i(n-t,2)+i(e-r,2))},e.hsla=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return"hsla(".concat(n,", 100%, ").concat(e,"%, ").concat(t,")")}},449:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(i,o){function a(n){try{c(r.next(n))}catch(n){o(n)}}function s(n){try{c(r.throw(n))}catch(n){o(n)}}function c(n){var e;n.done?i(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,s)}c((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.Sound=void 0;var i=t(909);e.Sound=class{constructor(n){this._buffer=[],this.onInit=!0,this._audioContext=new(window.AudioContext||window.webkitAudioContext),this.options=Object.assign({enabled:!1,files:["explosion0.mp3","explosion1.mp3","explosion2.mp3"],volume:{min:4,max:8}},n),this.init()}init(){this.onInit&&this.options.enabled&&(this.onInit=!1,this.load())}load(){return r(this,void 0,void 0,(function*(){for(var n of this.options.files){var e=yield(yield fetch(n)).arrayBuffer();this._audioContext.decodeAudioData(e).then((n=>{this._buffer.push(n)})).catch((n=>{throw n}))}}))}play(){if(this.options.enabled&&this._buffer.length){var n=this._audioContext.createBufferSource(),e=this._buffer[(0,i.randomInt)(0,this._buffer.length-1)],t=this._audioContext.createGain();n.buffer=e,t.gain.value=(0,i.randomFloat)(this.options.volume.min/100,this.options.volume.max/100),t.connect(this._audioContext.destination),n.connect(t),n.start(0)}else this.init()}}},668:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Trace=void 0;var r=t(909);e.Trace=class{constructor(n){var{x:e,y:t,dx:i,dy:o,ctx:a,hue:s,speed:c,traceLength:A,acceleration:u}=n;for(this._coordinates=[],this._currentDistance=0,this._x=e,this._y=t,this._sx=e,this._sy=t,this._dx=i,this._dy=o,this._ctx=a,this._hue=s,this._speed=c,this._traceLength=A,this._acceleration=u,this._totalDistance=(0,r.getDistance)(e,t,i,o);this._traceLength--;)this._coordinates.push([e,t]);this._angle=Math.atan2(o-t,i-e),this._brightness=(0,r.randomInt)(50,70)}update(n){this._coordinates.pop(),this._coordinates.unshift([this._x,this._y]),this._speed*=this._acceleration;var e=Math.cos(this._angle)*this._speed,t=Math.sin(this._angle)*this._speed;this._currentDistance=(0,r.getDistance)(this._sx,this._sy,this._x+e,this._y+t),this._currentDistance>=this._totalDistance?n(this._dx,this._dy,this._hue):(this._x+=e,this._y+=t)}draw(){var n=this._coordinates.length-1;this._ctx.beginPath(),this._ctx.moveTo(this._coordinates[n][0],this._coordinates[n][1]),this._ctx.lineTo(this._x,this._y),this._ctx.strokeStyle=(0,r.hsla)(this._hue,this._brightness),this._ctx.stroke()}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={exports:{}};return n[r].call(o.exports,o,o.exports,t),o.exports}var r={};return(()=>{var n=r;Object.defineProperty(n,"__esModule",{value:!0}),n.Fireworks=void 0;var e=t(668),i=t(449),o=t(511),a=t(909);n.Fireworks=class{constructor(n){var{autoresize:e=!0,boundaries:t,brightness:r,delay:o,hue:a,mouse:s,sound:c,trace:A=3,speed:u=2,explosion:d=5,gravity:l=1.5,opacity:h=.5,particles:p=50,friction:m=.95,rocketsPoint:f=50,acceleration:g=1.05}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this._tick=0,this._version="1.3.5",this._running=!1,this._randomRocketsPoint=!1,this._experimentals=!1,this._m=!1,this._container=n,this._canvas=document.createElement("canvas"),this._ctx=this._canvas.getContext("2d"),this._container.appendChild(this._canvas),this._sound=new i.Sound(c),this.setSize(),this.setBoundaries(Object.assign({visible:!1,x:50,y:50},t)),this.autoresize=e,this.trace=A,this.speed=u,this.explosion=d,this.gravity=l,this.opacity=h,this.particles=p,this.friction=m,this.rocketsPoint=f,this.acceleration=g,this.hue=Object.assign({min:0,max:360},a),this.mouse=Object.assign({click:!1,move:!1,max:1},s),this.delay=Object.assign({min:15,max:30},o),this.brightness=Object.assign({min:50,max:80,decay:{min:.015,max:.03}},r),this.autoresize&&window.addEventListener("resize",(()=>this.windowResize())),this._canvas.addEventListener("mousedown",(n=>this.mouseDown(n))),this._canvas.addEventListener("mouseup",(n=>this.mouseUp(n))),this._canvas.addEventListener("mousemove",(n=>this.mouseMove(n)))}get isRunning(){return this._running}get version(){return this._version}start(){this._running||(this._running=!0,this.clear(),this.render())}stop(){this._running&&(this._running=!1,this.clear())}unmount(){window.removeEventListener("resize",this.windowResize),this._canvas.addEventListener("mousedown",this.mouseDown),this._canvas.addEventListener("mouseup",this.mouseUp),this._canvas.addEventListener("mousemove",this.mouseMove)}pause(){this._running=!this._running}clear(){this._ctx&&(this._traces=[],this._explosions=[],this._ctx.clearRect(0,0,this._width,this._height))}setOptions(n){for(var[e,t]of Object.entries(n)){var r=Object.prototype.hasOwnProperty.call(this,e);if("function"==typeof this[e])throw new Error("You cannot change the methods of the class!");r&&("object"==typeof this[e]?Object.assign(this[e],t):this[e]=t),"sound"===e&&Object.assign(this._sound.options,t)}}setSize(){var{width:n=this._container.clientWidth,height:e=this._container.clientHeight}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this._width=n,this._height=e,this._canvas.width=n,this._canvas.height=e,this.setBoundaries({width:n,height:e})}setBoundaries(n){this.boundaries=Object.assign(Object.assign({},this.boundaries),n)}useMouse(n,e){(this.mouse.click||this.mouse.move)&&(this._mx=n.pageX-this._canvas.offsetLeft,this._my=n.pageY-this._canvas.offsetTop,this._m=e)}windowResize(){this.setSize()}mouseDown(n){this.useMouse(n,this.mouse.click)}mouseUp(n){this.useMouse(n,!1)}mouseMove(n){this.useMouse(n,this._m)}render(){this._ctx&&this._running&&(requestAnimationFrame((()=>this.render())),this._ctx.globalCompositeOperation="destination-out",this._ctx.fillStyle="rgba(0, 0, 0, ".concat(this.opacity,")"),this._ctx.fillRect(0,0,this._width,this._height),this._ctx.globalCompositeOperation="lighter",this.drawBoundaries(),this.initTrace(),this.drawTrace(),this.drawExplosion(),this._tick++)}drawBoundaries(){this.boundaries.visible&&(this._ctx.beginPath(),this._ctx.strokeStyle="red",this._ctx.rect(this.boundaries.x,this.boundaries.y,this.boundaries.width-2*this.boundaries.x,.5*this.boundaries.height),this._ctx.stroke())}initTrace(){this._ds=(0,a.randomInt)(this.delay.min,this.delay.max),(2*this._ds<this._tick||this._m&&this.mouse.max>this._traces.length)&&(this._traces.push(new e.Trace({x:this._width*(this._randomRocketsPoint?(0,a.randomInt)(0,100):this.rocketsPoint)/100,y:this._height,dx:this._mx&&this.mouse.move||this._m?this._mx:(0,a.randomInt)(this.boundaries.x,this.boundaries.width-2*this.boundaries.x),dy:this._my&&this.mouse.move||this._m?this._my:(0,a.randomInt)(this.boundaries.y,.5*this.boundaries.height),ctx:this._ctx,hue:(0,a.randomInt)(this.hue.min,this.hue.max),speed:this.speed,acceleration:this.acceleration,traceLength:this.trace})),this._tick=0)}drawTrace(){for(var n=this._traces.length;n--;)this._traces[n].draw(),this._traces[n].update(((e,t,r)=>{this.initExplosion(e,t,r),this._sound.play(),this._traces.splice(n,1)}))}initExplosion(n,e,t){for(var r=this.particles;r--;)this._explosions.push(new o.Explosion({x:n,y:e,ctx:this._ctx,hue:t,friction:this.friction,gravity:this.gravity,explosionLength:this.explosion,brightness:this.brightness,exp:this._experimentals}))}drawExplosion(){for(var n=this._explosions.length;n--;)this._explosions[n].draw(),this._explosions[n].update((()=>{this._explosions.splice(n,1)}))}}})(),r})()},379:n=>{"use strict";var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],s=0;s<n.length;s++){var c=n[s],A=r.base?c[0]+r.base:c[0],u=o[A]||0,d="".concat(A," ").concat(u);o[A]=u+1;var l=t(d),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)e[l].references++,e[l].updater(h);else{var p=i(h,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var s=t(o[a]);e[s].references--}for(var c=r(n,i),A=0;A<o.length;A++){var u=t(o[A]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}o=c}}},569:n=>{"use strict";var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},820:(n,e,t)=>{"use strict";n.exports=t.p+"51cf0024fac8f2f1e39b.jpg"},531:(n,e,t)=>{"use strict";n.exports=t.p+"2940e503a66aa8e208cb.png"},849:(n,e,t)=>{"use strict";n.exports=t.p+"38bcfa2df7f7f9a54170.png"},680:(n,e,t)=>{"use strict";n.exports=t.p+"60b90e05c588ddd9264d.png"}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r].call(o.exports,o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{"use strict";var n=t(379),e=t.n(n),r=t(795),i=t.n(r),o=t(569),a=t.n(o),s=t(565),c=t.n(s),A=t(216),u=t.n(A),d=t(589),l=t.n(d),h=t(740),p={};p.styleTagTransform=l(),p.setAttributes=c(),p.insert=a().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=u(),e()(h.Z,p),h.Z&&h.Z.locals&&h.Z.locals;var m={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},f={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},g=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective","matrix","matrix3d"],b={CSS:{},springs:{}};function E(n,e,t){return Math.min(Math.max(n,e),t)}function C(n,e){return n.indexOf(e)>-1}function B(n,e){return n.apply(null,e)}var x={arr:function(n){return Array.isArray(n)},obj:function(n){return C(Object.prototype.toString.call(n),"Object")},pth:function(n){return x.obj(n)&&n.hasOwnProperty("totalLength")},svg:function(n){return n instanceof SVGElement},inp:function(n){return n instanceof HTMLInputElement},dom:function(n){return n.nodeType||x.svg(n)},str:function(n){return"string"==typeof n},fnc:function(n){return"function"==typeof n},und:function(n){return void 0===n},nil:function(n){return x.und(n)||null===n},hex:function(n){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(n)},rgb:function(n){return/^rgb/.test(n)},hsl:function(n){return/^hsl/.test(n)},col:function(n){return x.hex(n)||x.rgb(n)||x.hsl(n)},key:function(n){return!m.hasOwnProperty(n)&&!f.hasOwnProperty(n)&&"targets"!==n&&"keyframes"!==n}};function v(n){var e=/\(([^)]+)\)/.exec(n);return e?e[1].split(",").map((function(n){return parseFloat(n)})):[]}function y(n,e){var t=v(n),r=E(x.und(t[0])?1:t[0],.1,100),i=E(x.und(t[1])?100:t[1],.1,100),o=E(x.und(t[2])?10:t[2],.1,100),a=E(x.und(t[3])?0:t[3],.1,100),s=Math.sqrt(i/r),c=o/(2*Math.sqrt(i*r)),A=c<1?s*Math.sqrt(1-c*c):0,u=c<1?(c*s-a)/A:-a+s;function d(n){var t=e?e*n/1e3:n;return t=c<1?Math.exp(-t*c*s)*(1*Math.cos(A*t)+u*Math.sin(A*t)):(1+u*t)*Math.exp(-t*s),0===n||1===n?n:1-t}return e?d:function(){var e=b.springs[n];if(e)return e;for(var t=1/6,r=0,i=0;;)if(1===d(r+=t)){if(++i>=16)break}else i=0;var o=r*t*1e3;return b.springs[n]=o,o}}function w(n){return void 0===n&&(n=10),function(e){return Math.ceil(E(e,1e-6,1)*n)*(1/n)}}var _,k,I=function(){var n=.1;function e(n,e){return 1-3*e+3*n}function t(n,e){return 3*e-6*n}function r(n){return 3*n}function i(n,i,o){return((e(i,o)*n+t(i,o))*n+r(i))*n}function o(n,i,o){return 3*e(i,o)*n*n+2*t(i,o)*n+r(i)}return function(e,t,r,a){if(0<=e&&e<=1&&0<=r&&r<=1){var s=new Float32Array(11);if(e!==t||r!==a)for(var c=0;c<11;++c)s[c]=i(c*n,e,r);return function(c){return e===t&&r===a||0===c||1===c?c:i(function(t){for(var a=0,c=1;10!==c&&s[c]<=t;++c)a+=n;--c;var A=a+(t-s[c])/(s[c+1]-s[c])*n,u=o(A,e,r);return u>=.001?function(n,e,t,r){for(var a=0;a<4;++a){var s=o(e,t,r);if(0===s)return e;e-=(i(e,t,r)-n)/s}return e}(t,A,e,r):0===u?A:function(n,e,t,r,o){var a,s,c=0;do{(a=i(s=e+(t-e)/2,r,o)-n)>0?t=s:e=s}while(Math.abs(a)>1e-7&&++c<10);return s}(t,a,a+n,e,r)}(c),t,a)}}}}(),M=(_={linear:function(){return function(n){return n}}},k={Sine:function(){return function(n){return 1-Math.cos(n*Math.PI/2)}},Circ:function(){return function(n){return 1-Math.sqrt(1-n*n)}},Back:function(){return function(n){return n*n*(3*n-2)}},Bounce:function(){return function(n){for(var e,t=4;n<((e=Math.pow(2,--t))-1)/11;);return 1/Math.pow(4,3-t)-7.5625*Math.pow((3*e-2)/22-n,2)}},Elastic:function(n,e){void 0===n&&(n=1),void 0===e&&(e=.5);var t=E(n,1,10),r=E(e,.1,2);return function(n){return 0===n||1===n?n:-t*Math.pow(2,10*(n-1))*Math.sin((n-1-r/(2*Math.PI)*Math.asin(1/t))*(2*Math.PI)/r)}}},["Quad","Cubic","Quart","Quint","Expo"].forEach((function(n,e){k[n]=function(){return function(n){return Math.pow(n,e+2)}}})),Object.keys(k).forEach((function(n){var e=k[n];_["easeIn"+n]=e,_["easeOut"+n]=function(n,t){return function(r){return 1-e(n,t)(1-r)}},_["easeInOut"+n]=function(n,t){return function(r){return r<.5?e(n,t)(2*r)/2:1-e(n,t)(-2*r+2)/2}},_["easeOutIn"+n]=function(n,t){return function(r){return r<.5?(1-e(n,t)(1-2*r))/2:(e(n,t)(2*r-1)+1)/2}}})),_);function j(n,e){if(x.fnc(n))return n;var t=n.split("(")[0],r=M[t],i=v(n);switch(t){case"spring":return y(n,e);case"cubicBezier":return B(I,i);case"steps":return B(w,i);default:return B(r,i)}}function S(n){try{return document.querySelectorAll(n)}catch(n){return}}function z(n,e){for(var t=n.length,r=arguments.length>=2?arguments[1]:void 0,i=[],o=0;o<t;o++)if(o in n){var a=n[o];e.call(r,a,o,n)&&i.push(a)}return i}function D(n){return n.reduce((function(n,e){return n.concat(x.arr(e)?D(e):e)}),[])}function O(n){return x.arr(n)?n:(x.str(n)&&(n=S(n)||n),n instanceof NodeList||n instanceof HTMLCollection?[].slice.call(n):[n])}function T(n,e){return n.some((function(n){return n===e}))}function P(n){var e={};for(var t in n)e[t]=n[t];return e}function L(n,e){var t=P(n);for(var r in n)t[r]=e.hasOwnProperty(r)?e[r]:n[r];return t}function W(n,e){var t=P(n);for(var r in e)t[r]=x.und(n[r])?e[r]:n[r];return t}function q(n){var e=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(n);if(e)return e[1]}function F(n,e){return x.fnc(n)?n(e.target,e.id,e.total):n}function N(n,e){return n.getAttribute(e)}function U(n,e,t){if(T([t,"deg","rad","turn"],q(e)))return e;var r=b.CSS[e+t];if(!x.und(r))return r;var i=document.createElement(n.tagName),o=n.parentNode&&n.parentNode!==document?n.parentNode:document.body;o.appendChild(i),i.style.position="absolute",i.style.width=100+t;var a=100/i.offsetWidth;o.removeChild(i);var s=a*parseFloat(e);return b.CSS[e+t]=s,s}function Y(n,e,t){if(e in n.style){var r=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),i=n.style[e]||getComputedStyle(n).getPropertyValue(r)||"0";return t?U(n,i,t):i}}function R(n,e){return x.dom(n)&&!x.inp(n)&&(!x.nil(N(n,e))||x.svg(n)&&n[e])?"attribute":x.dom(n)&&T(g,e)?"transform":x.dom(n)&&"transform"!==e&&Y(n,e)?"css":null!=n[e]?"object":void 0}function Z(n){if(x.dom(n)){for(var e,t=n.style.transform||"",r=/(\w+)\(([^)]*)\)/g,i=new Map;e=r.exec(t);)i.set(e[1],e[2]);return i}}function X(n,e,t,r){switch(R(n,e)){case"transform":return function(n,e,t,r){var i=C(e,"scale")?1:0+function(n){return C(n,"translate")||"perspective"===n?"px":C(n,"rotate")||C(n,"skew")?"deg":void 0}(e),o=Z(n).get(e)||i;return t&&(t.transforms.list.set(e,o),t.transforms.last=e),r?U(n,o,r):o}(n,e,r,t);case"css":return Y(n,e,t);case"attribute":return N(n,e);default:return n[e]||0}}function Q(n,e){var t=/^(\*=|\+=|-=)/.exec(n);if(!t)return n;var r=q(n)||0,i=parseFloat(e),o=parseFloat(n.replace(t[0],""));switch(t[0][0]){case"+":return i+o+r;case"-":return i-o+r;case"*":return i*o+r}}function H(n,e){if(x.col(n))return function(n){return x.rgb(n)?(t=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(e=n))?"rgba("+t[1]+",1)":e:x.hex(n)?function(n){var e=n.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(n,e,t,r){return e+e+t+t+r+r})),t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return"rgba("+parseInt(t[1],16)+","+parseInt(t[2],16)+","+parseInt(t[3],16)+",1)"}(n):x.hsl(n)?function(n){var e,t,r,i=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(n)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(n),o=parseInt(i[1],10)/360,a=parseInt(i[2],10)/100,s=parseInt(i[3],10)/100,c=i[4]||1;function A(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+6*(e-n)*t:t<.5?e:t<2/3?n+(e-n)*(2/3-t)*6:n}if(0==a)e=t=r=s;else{var u=s<.5?s*(1+a):s+a-s*a,d=2*s-u;e=A(d,u,o+1/3),t=A(d,u,o),r=A(d,u,o-1/3)}return"rgba("+255*e+","+255*t+","+255*r+","+c+")"}(n):void 0;var e,t}(n);if(/\s/g.test(n))return n;var t=q(n),r=t?n.substr(0,n.length-t.length):n;return e?r+e:r}function V(n,e){return Math.sqrt(Math.pow(e.x-n.x,2)+Math.pow(e.y-n.y,2))}function $(n){for(var e,t=n.points,r=0,i=0;i<t.numberOfItems;i++){var o=t.getItem(i);i>0&&(r+=V(e,o)),e=o}return r}function J(n){if(n.getTotalLength)return n.getTotalLength();switch(n.tagName.toLowerCase()){case"circle":return function(n){return 2*Math.PI*N(n,"r")}(n);case"rect":return function(n){return 2*N(n,"width")+2*N(n,"height")}(n);case"line":return function(n){return V({x:N(n,"x1"),y:N(n,"y1")},{x:N(n,"x2"),y:N(n,"y2")})}(n);case"polyline":return $(n);case"polygon":return function(n){var e=n.points;return $(n)+V(e.getItem(e.numberOfItems-1),e.getItem(0))}(n)}}function G(n,e){var t=e||{},r=t.el||function(n){for(var e=n.parentNode;x.svg(e)&&x.svg(e.parentNode);)e=e.parentNode;return e}(n),i=r.getBoundingClientRect(),o=N(r,"viewBox"),a=i.width,s=i.height,c=t.viewBox||(o?o.split(" "):[0,0,a,s]);return{el:r,viewBox:c,x:c[0]/1,y:c[1]/1,w:a,h:s,vW:c[2],vH:c[3]}}function K(n,e,t){function r(t){void 0===t&&(t=0);var r=e+t>=1?e+t:0;return n.el.getPointAtLength(r)}var i=G(n.el,n.svg),o=r(),a=r(-1),s=r(1),c=t?1:i.w/i.vW,A=t?1:i.h/i.vH;switch(n.property){case"x":return(o.x-i.x)*c;case"y":return(o.y-i.y)*A;case"angle":return 180*Math.atan2(s.y-a.y,s.x-a.x)/Math.PI}}function nn(n,e){var t=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,r=H(x.pth(n)?n.totalLength:n,e)+"";return{original:r,numbers:r.match(t)?r.match(t).map(Number):[0],strings:x.str(n)||e?r.split(t):[]}}function en(n){return z(n?D(x.arr(n)?n.map(O):O(n)):[],(function(n,e,t){return t.indexOf(n)===e}))}function tn(n){var e=en(n);return e.map((function(n,t){return{target:n,id:t,total:e.length,transforms:{list:Z(n)}}}))}function rn(n,e){var t=P(e);if(/^spring/.test(t.easing)&&(t.duration=y(t.easing)),x.arr(n)){var r=n.length;2!==r||x.obj(n[0])?x.fnc(e.duration)||(t.duration=e.duration/r):n={value:n}}var i=x.arr(n)?n:[n];return i.map((function(n,t){var r=x.obj(n)&&!x.pth(n)?n:{value:n};return x.und(r.delay)&&(r.delay=t?0:e.delay),x.und(r.endDelay)&&(r.endDelay=t===i.length-1?e.endDelay:0),r})).map((function(n){return W(n,t)}))}var on={css:function(n,e,t){return n.style[e]=t},attribute:function(n,e,t){return n.setAttribute(e,t)},object:function(n,e,t){return n[e]=t},transform:function(n,e,t,r,i){if(r.list.set(e,t),e===r.last||i){var o="";r.list.forEach((function(n,e){o+=e+"("+n+") "})),n.style.transform=o}}};function an(n,e){tn(n).forEach((function(n){for(var t in e){var r=F(e[t],n),i=n.target,o=q(r),a=X(i,t,o,n),s=Q(H(r,o||q(a)),a),c=R(i,t);on[c](i,t,s,n.transforms,!0)}}))}function sn(n,e){return z(D(n.map((function(n){return e.map((function(e){return function(n,e){var t=R(n.target,e.name);if(t){var r=function(n,e){var t;return n.tweens.map((function(r){var i=function(n,e){var t={};for(var r in n){var i=F(n[r],e);x.arr(i)&&1===(i=i.map((function(n){return F(n,e)}))).length&&(i=i[0]),t[r]=i}return t.duration=parseFloat(t.duration),t.delay=parseFloat(t.delay),t}(r,e),o=i.value,a=x.arr(o)?o[1]:o,s=q(a),c=X(e.target,n.name,s,e),A=t?t.to.original:c,u=x.arr(o)?o[0]:A,d=q(u)||q(c),l=s||d;return x.und(a)&&(a=A),i.from=nn(u,l),i.to=nn(Q(a,u),l),i.start=t?t.end:0,i.end=i.start+i.delay+i.duration+i.endDelay,i.easing=j(i.easing,i.duration),i.isPath=x.pth(o),i.isPathTargetInsideSVG=i.isPath&&x.svg(e.target),i.isColor=x.col(i.from.original),i.isColor&&(i.round=1),t=i,i}))}(e,n),i=r[r.length-1];return{type:t,property:e.name,animatable:n,tweens:r,duration:i.end,delay:r[0].delay,endDelay:i.endDelay}}}(n,e)}))}))),(function(n){return!x.und(n)}))}function cn(n,e){var t=n.length,r=function(n){return n.timelineOffset?n.timelineOffset:0},i={};return i.duration=t?Math.max.apply(Math,n.map((function(n){return r(n)+n.duration}))):e.duration,i.delay=t?Math.min.apply(Math,n.map((function(n){return r(n)+n.delay}))):e.delay,i.endDelay=t?i.duration-Math.max.apply(Math,n.map((function(n){return r(n)+n.duration-n.endDelay}))):e.endDelay,i}var An=0,un=[],dn=function(){var n;function e(t){for(var r=un.length,i=0;i<r;){var o=un[i];o.paused?(un.splice(i,1),r--):(o.tick(t),i++)}n=i>0?requestAnimationFrame(e):void 0}return"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){hn.suspendWhenDocumentHidden&&(ln()?n=cancelAnimationFrame(n):(un.forEach((function(n){return n._onDocumentVisibility()})),dn()))})),function(){n||ln()&&hn.suspendWhenDocumentHidden||!(un.length>0)||(n=requestAnimationFrame(e))}}();function ln(){return!!document&&document.hidden}function hn(n){void 0===n&&(n={});var e,t=0,r=0,i=0,o=0,a=null;function s(n){var e=window.Promise&&new Promise((function(n){return a=n}));return n.finished=e,e}var c=function(n){var e=L(m,n),t=L(f,n),r=function(n,e){var t=[],r=e.keyframes;for(var i in r&&(e=W(function(n){for(var e=z(D(n.map((function(n){return Object.keys(n)}))),(function(n){return x.key(n)})).reduce((function(n,e){return n.indexOf(e)<0&&n.push(e),n}),[]),t={},r=function(r){var i=e[r];t[i]=n.map((function(n){var e={};for(var t in n)x.key(t)?t==i&&(e.value=n[t]):e[t]=n[t];return e}))},i=0;i<e.length;i++)r(i);return t}(r),e)),e)x.key(i)&&t.push({name:i,tweens:rn(e[i],n)});return t}(t,n),i=tn(n.targets),o=sn(i,r),a=cn(o,t),s=An;return An++,W(e,{id:s,children:[],animatables:i,animations:o,duration:a.duration,delay:a.delay,endDelay:a.endDelay})}(n);function A(){var n=c.direction;"alternate"!==n&&(c.direction="normal"!==n?"normal":"reverse"),c.reversed=!c.reversed,e.forEach((function(n){return n.reversed=c.reversed}))}function u(n){return c.reversed?c.duration-n:n}function d(){t=0,r=u(c.currentTime)*(1/hn.speed)}function l(n,e){e&&e.seek(n-e.timelineOffset)}function h(n){for(var e=0,t=c.animations,r=t.length;e<r;){var i=t[e],o=i.animatable,a=i.tweens,s=a.length-1,A=a[s];s&&(A=z(a,(function(e){return n<e.end}))[0]||A);for(var u=E(n-A.start-A.delay,0,A.duration)/A.duration,d=isNaN(u)?1:A.easing(u),l=A.to.strings,h=A.round,p=[],m=A.to.numbers.length,f=void 0,g=0;g<m;g++){var b=void 0,C=A.to.numbers[g],B=A.from.numbers[g]||0;b=A.isPath?K(A.value,d*C,A.isPathTargetInsideSVG):B+d*(C-B),h&&(A.isColor&&g>2||(b=Math.round(b*h)/h)),p.push(b)}var x=l.length;if(x){f=l[0];for(var v=0;v<x;v++){l[v];var y=l[v+1],w=p[v];isNaN(w)||(f+=y?w+y:w+" ")}}else f=p[0];on[i.type](o.target,i.property,f,o.transforms),i.currentValue=f,e++}}function p(n){c[n]&&!c.passThrough&&c[n](c)}function g(n){var d=c.duration,m=c.delay,f=d-c.endDelay,g=u(n);c.progress=E(g/d*100,0,100),c.reversePlayback=g<c.currentTime,e&&function(n){if(c.reversePlayback)for(var t=o;t--;)l(n,e[t]);else for(var r=0;r<o;r++)l(n,e[r])}(g),!c.began&&c.currentTime>0&&(c.began=!0,p("begin")),!c.loopBegan&&c.currentTime>0&&(c.loopBegan=!0,p("loopBegin")),g<=m&&0!==c.currentTime&&h(0),(g>=f&&c.currentTime!==d||!d)&&h(d),g>m&&g<f?(c.changeBegan||(c.changeBegan=!0,c.changeCompleted=!1,p("changeBegin")),p("change"),h(g)):c.changeBegan&&(c.changeCompleted=!0,c.changeBegan=!1,p("changeComplete")),c.currentTime=E(g,0,d),c.began&&p("update"),n>=d&&(r=0,c.remaining&&!0!==c.remaining&&c.remaining--,c.remaining?(t=i,p("loopComplete"),c.loopBegan=!1,"alternate"===c.direction&&A()):(c.paused=!0,c.completed||(c.completed=!0,p("loopComplete"),p("complete"),!c.passThrough&&"Promise"in window&&(a(),s(c)))))}return s(c),c.reset=function(){var n=c.direction;c.passThrough=!1,c.currentTime=0,c.progress=0,c.paused=!0,c.began=!1,c.loopBegan=!1,c.changeBegan=!1,c.completed=!1,c.changeCompleted=!1,c.reversePlayback=!1,c.reversed="reverse"===n,c.remaining=c.loop,e=c.children;for(var t=o=e.length;t--;)c.children[t].reset();(c.reversed&&!0!==c.loop||"alternate"===n&&1===c.loop)&&c.remaining++,h(c.reversed?c.duration:0)},c._onDocumentVisibility=d,c.set=function(n,e){return an(n,e),c},c.tick=function(n){i=n,t||(t=i),g((i+(r-t))*hn.speed)},c.seek=function(n){g(u(n))},c.pause=function(){c.paused=!0,d()},c.play=function(){c.paused&&(c.completed&&c.reset(),c.paused=!1,un.push(c),d(),dn())},c.reverse=function(){A(),c.completed=!c.reversed,d()},c.restart=function(){c.reset(),c.play()},c.remove=function(n){mn(en(n),c)},c.reset(),c.autoplay&&c.play(),c}function pn(n,e){for(var t=e.length;t--;)T(n,e[t].animatable.target)&&e.splice(t,1)}function mn(n,e){var t=e.animations,r=e.children;pn(n,t);for(var i=r.length;i--;){var o=r[i],a=o.animations;pn(n,a),a.length||o.children.length||r.splice(i,1)}t.length||r.length||e.pause()}hn.version="3.2.1",hn.speed=1,hn.suspendWhenDocumentHidden=!0,hn.running=un,hn.remove=function(n){for(var e=en(n),t=un.length;t--;)mn(e,un[t])},hn.get=X,hn.set=an,hn.convertPx=U,hn.path=function(n,e){var t=x.str(n)?S(n)[0]:n,r=e||100;return function(n){return{property:n,el:t,svg:G(t),totalLength:J(t)*(r/100)}}},hn.setDashoffset=function(n){var e=J(n);return n.setAttribute("stroke-dasharray",e),e},hn.stagger=function(n,e){void 0===e&&(e={});var t=e.direction||"normal",r=e.easing?j(e.easing):null,i=e.grid,o=e.axis,a=e.from||0,s="first"===a,c="center"===a,A="last"===a,u=x.arr(n),d=u?parseFloat(n[0]):parseFloat(n),l=u?parseFloat(n[1]):0,h=q(u?n[1]:n)||0,p=e.start||0+(u?d:0),m=[],f=0;return function(n,e,g){if(s&&(a=0),c&&(a=(g-1)/2),A&&(a=g-1),!m.length){for(var b=0;b<g;b++){if(i){var E=c?(i[0]-1)/2:a%i[0],C=c?(i[1]-1)/2:Math.floor(a/i[0]),B=E-b%i[0],x=C-Math.floor(b/i[0]),v=Math.sqrt(B*B+x*x);"x"===o&&(v=-B),"y"===o&&(v=-x),m.push(v)}else m.push(Math.abs(a-b));f=Math.max.apply(Math,m)}r&&(m=m.map((function(n){return r(n/f)*f}))),"reverse"===t&&(m=m.map((function(n){return o?n<0?-1*n:-n:Math.abs(f-n)})))}return p+(u?(l-d)/f:d)*(Math.round(100*m[e])/100)+h}},hn.timeline=function(n){void 0===n&&(n={});var e=hn(n);return e.duration=0,e.add=function(t,r){var i=un.indexOf(e),o=e.children;function a(n){n.passThrough=!0}i>-1&&un.splice(i,1);for(var s=0;s<o.length;s++)a(o[s]);var c=W(t,L(f,n));c.targets=c.targets||n.targets;var A=e.duration;c.autoplay=!1,c.direction=e.direction,c.timelineOffset=x.und(r)?A:Q(r,A),a(e),e.seek(c.timelineOffset);var u=hn(c);a(u),o.push(u);var d=cn(o,n);return e.delay=d.delay,e.endDelay=d.endDelay,e.duration=d.duration,e.seek(0),e.reset(),e.autoplay&&e.play(),e},e},hn.easing=j,hn.penner=M,hn.random=function(n,e){return Math.floor(Math.random()*(e-n+1))+n},hn.timeline({easing:"easeOutExpo",duration:750,loop:!0}).add({targets:"span:nth-child(1)",translateX:"110%",width:"100%",duration:1e3}).add({targets:"span:nth-child(2)",translateY:"110%",height:"100%",duration:1e3}).add({targets:"span:nth-child(3)",translateX:"-110%",width:"100%",duration:1e3}).add({targets:"span:nth-child(4)",translateY:"-110%",height:"100%",duration:1e3});var fn=t(849),gn=t(680),bn=t(531);const En=n=>(n.sort(((n,e)=>Number(n.score)<Number(e.score)?1:-1)),n),Cn=(n,e)=>{sessionStorage.setItem(n,JSON.stringify(En(e)))},Bn=n=>{const e=document.querySelector(".score-list-box"),t=document.querySelector(".fetch-error");e.innerHTML="",n.length>0?(n.forEach(((n,t)=>{e.appendChild(((n,e)=>{const t=document.createElement("div"),r=document.createElement("p"),i=document.createElement("p"),o=document.createElement("span"),a=document.createElement("img"),s=document.createElement("div"),c=document.createElement("div"),A=document.createElement("div"),u=["serial-number","image-holder","medal-image","score-list-row","score-list-name","score-list-score","wrapper-serial-image","wrapper-name-score"];return[o,A,a,t,r,i,s,c].forEach(((n,e)=>{n.setAttribute("class",u[e])})),0===e?(a.src=fn,a.classList.add("medal")):1===e?(a.src=gn,a.classList.add("medal")):2===e&&(a.src=bn,a.classList.add("medal")),o.textContent=e+1,r.textContent=n.user,i.textContent=n.score,A.appendChild(a),s.append(o,A),c.append(r,i),t.append(s,c),t})(n,t))})),(n=>{const e=[];n.slice(0,3).forEach((n=>{e.push(n.score)})),Cn("top",e)})(n),[...document.querySelectorAll(".score-list-row")].forEach(((n,e)=>{e%2==0&&(n.style.backgroundColor="rgba(121, 20, 99, 0.2)")}))):(t.style.display="block",t.textContent="The List is Empty! Please Add More Scores.",e.appendChild(t))},xn="https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/pQBseecJSYObMTCZR0RB/scores",vn=async()=>(await fetch(xn)).json();var yn=t(611);const wn=document.querySelector(".submit-error"),_n=()=>{const n=document.querySelector("#user").value,e=document.querySelector("#score").value,t=/^[0-9]+$/;if(e.length<8){if(""!==n&&""!==e&&e.match(t)){const t={user:n,score:e};(async n=>{const e=await fetch(xn,{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}});await e.json()})(t),r=Number(e),(JSON.parse(sessionStorage.getItem("top"))||[]).some((n=>r>=Number(n)))&&(()=>{const n=document.getElementById("canvas"),e=new yn.Fireworks(n,{hue:120,startDelay:1,minDelay:20,maxDelay:30,speed:4,acceleration:1.05,friction:.98,gravity:1,particles:500,trace:3,explosion:5,boundaries:{top:50,bottom:n.clientHeight,left:50,right:n.clientWidth},sound:{enable:!0,list:["explosion0.mp3","explosion1.mp3","explosion2.mp3"],min:4,max:100}}),t=document.querySelector(".submit-error");t.classList.toggle("congratulations"),t.textContent="Congratulations. You Won a Medal!",e.start(),setTimeout((()=>{e.stop(),t.classList.toggle("congratulations")}),1e4)})();const i=("scores",JSON.parse(sessionStorage.getItem("scores"))||[]);return i.push(t),Cn("scores",i),Bn(i),!0}return!1}var r;return wn.textContent="Maximum Allowable Score is 9999999",!1},kn=(n,e,t)=>{document.addEventListener(n,(n=>{n.target.matches(e)&&t(n)}))};kn("click","#score-submit",(n=>{n.preventDefault();const e=document.querySelector(".score-submit-form"),t=document.querySelector("#user"),r=document.querySelector("#score");_n()?(wn.classList.remove("error"),e.reset(),t.focus()):(wn.textContent="Please Enter All the Require Fields.",wn.classList.add("error"),r.focus())})),kn("click","#btn-refresh",(()=>{vn().then((n=>{Bn(En(n.result))}))})),document.addEventListener("DOMContentLoaded",(()=>{vn().then((n=>{Bn(En(n.result)),Cn("scores",n.result)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,